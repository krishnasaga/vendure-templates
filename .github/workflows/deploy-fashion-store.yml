name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: storefront-ci
    steps:
      - name: Add droplet to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.DO_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            ls
            REPO_URL="https://github.com/krishnasaga/vendure-templates.git"
            APP_DIR="/live-code"
            if [ -d "$APP_DIR/.git" ]; then
              echo "Repo exists. Pulling latest changes..."
              cd $APP_DIR
              git pull
            else
              echo "Cloning repository..."
              git clone "$REPO_URL" "$APP_DIR"
            fi
            cd $APP_DIR
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm use 22
            node --version
            ls
            
            # Install dependencies
            yarn install
            
            # List available workspaces to debug
            echo "Available workspaces:"
            yarn workspaces info
            
            # Check if the workspace exists before trying to build
            if yarn workspaces info | grep -q "store-pastelweave"; then
              echo "Building and starting store-pastelweave..."
              yarn workspace store-pastelweave build
              # Kill any existing process
              pkill -f "node.*store-pastelweave" || true
              nohup yarn workspace store-pastelweave start > output.log 2>&1 &
            else
              # Try alternative workspace name if it exists
              WORKSPACE_NAME=$(yarn workspaces info | grep -o '"[^"]*store[^"]*"' | head -1 | tr -d '"')
              if [ ! -z "$WORKSPACE_NAME" ]; then
                echo "Found similar workspace: $WORKSPACE_NAME. Building and starting..."
                yarn workspace $WORKSPACE_NAME build
                # Kill any existing process
                pkill -f "node.*$WORKSPACE_NAME" || true
                nohup yarn workspace $WORKSPACE_NAME start > output.log 2>&1 &
              else
                echo "Error: Workspace store-pastelweave not found and no similar workspace detected."
                echo "Available workspaces:"
                yarn workspaces info
                exit 1
              fi
            fi
            echo "Deployment completed"




